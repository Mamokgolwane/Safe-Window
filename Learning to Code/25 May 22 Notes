<!DOCTYPE html>
<html>
    <head>
        <title> Basic Concepts prac</title>
        <meta charset="utf-8">
        <style>
            body{
                background-color: rgb(104, 160, 170);
            }
            </style>
     </head>
     <body>
         <h1>Operators</h1>
         <h3><em>Arithmetic operators</em></h3>
         <script>
             //arithmetric operators perform arithmetic functions
             var x = 3;
             document.write(x + 2);
             var w = 4;
             document.write(50 % w);//modulus finds the remainder after anumber is divided by another

             //POST-INCREMENT EXAMPLE below

             var f, g; 
             f = 10;
             g = f++;/*POST-increment means we assign value of f(=10) first then increment it.
              Therefore the value RETURNED is only what was assigned which is 10*/
             document.write(g); //returned value is 10 (because it was assigned beore the increment)
             document.write(f + 1); //returned value is incremented by 1 so 11
             
             //POST-DECREMENT EXAMPLE below

             var y, z; 
             y = 5;
             z = y--; /*POST-decrement means- the returned value is what was assigned to z 
             before the decrement which is 5*/
             document.write(z); //returned value is 5 (because it was assigned before the decrement)
             document.write(y); //returned value is decremented by 1 so 4

             //PRE-INCREMENT EXAMPLE below

             var m, n;
             m = 1;
             n = ++m;
             document.write(" new value of m is, \nand I repeat is equal to " + m);/*NB: "the value of m" is a STRING
             (any text wrapped in quotes) then added using a string operator(+)*/
             document.write(n); /*returned value is what was assigned 
             (the value was incremented first before it was assigned)*/
             
             
             //SUMMARY: operators like +,-, /,*,%, ++,-- serve same purpose like you know mathematically.
             //remeber post- and pre- increment(add 1) and decrement(minus 1)
             </script>

         <h3><em>Assignment Operators</em></h3>
         <script>
             /*this type of an operator is used to assign a value to variables.
             are math operators but with an equal to i.e +=,-=,%= etc*/
             
             var a = 5;
             document.write(a+=10); //its like saying a(5) plus(+) 10

             var b = 25
             document.write(b%=4) //like saying 25%5

             //MUTLIPLE ASSIGNMENT OPERATORS IN ONE LINE EXAMPLE

             var c, d;
             var c = 2;
             var d = 4;
             document.write(c+= d/=2); // means c(2) + d(4/2) = 4
             
             //SUMMARY: like arithmetic operators in expression i.e 2+=3 is 2+3
             </script>

             <h3><em>Comparison Operators</em></h3>
             <script>
              /*this type of operator finds out if variables or values are different
              and compares same data types i.e numbers, strings etc*/
             //NB: Returned answer is either true (if compared values are indeed equal) or false (vice versa)

             //example OF EQUAL TO (==)
             var ab = 5;
             var xy = "I LOVE MAMO"; //is a string(any text wrapped in quotation marks)
             document.write(ab==5); //true 
             document.write(ab==4); // false - ab is not equal to 4, but is equal to 5
             document.write(xy=="I LOVE MAMO");//true -comparing strings
             //example of IDENTICAL(===) -equal and same data type
             var cd = 2;
             document.write(cd===2); //true
             document.write(cd===3); //false

             //example of NOT EQUAL TO (!=)
             var ef = 1;
             document.write(ef!=2); //yes, it doesn't equal 2 therefore true
             document.write(ef!=1);// no, it is equal to it thefore false

             //example of NOT IDENTICAL (!==)
             var gh = 3;
             document.write(gh!==3); //false, it is identical
             document.write(gh!==4); //true, it is not identical

             //example of GREATER THAN (>) and LESSER THAN (<)
             var ij = 4;
             document.write(ij>2);// yes, true
             document.write(ij<2); //no, false

             //example of GREATER THAN OR EQUAL TO (>=)
             var kl = 6;
             document.write(kl>=7); //no, false
             document.write(kl>=5); //meets one of the requirements- greater than
             //NB: SPECIAL ATTENTION on "OR" - the expression can meet one or both of the requirements and vice versa
             
             //example of LESSER THAN OR EQUAL TO (<=)
             var mn = 7;
             document.write(mn<=8);//yes, true. Meets the "lesser requirement"
             docuement.write(mn<=7); //yes, true. Meets bboth requirements

             /*SUMMARY: READ the expression as "is variable's value x operator the value given?"
             Take "yes" as 'true' and "no" to answering the question the operator asks as 'false'*/
             </script>

        <h3><em>Logical or Boolean Operators</em></h3>
        <script>
             // these operators evaluate the expression and return a TRUE or FALSE

            //example of an AND operator (&&) (means BOTH operands must meet the requirement)
            var pq = 20;
            var ro = 30;
            document.write((pq>10)&&(ro>20)); //returns true because both statements are true
            document.write((pq>19)&&(ro<10)); //returns false because ONLY one of the expressions is true
        
            //NB: SPECIAL ATTENTION on "AND" for the logical operator - it means both statements must agree to either be false or true
            //both false = false, one of them is either = false

            //example of a OR operator (||) means EITHER can be TRUE
            var st = 40;
            var uv = 50;
            document.write((st>50)||(uv<60)); //only uv is TRUE therefore the returned answer is TRUE (EITHER)
            
            //example of a NOT operator(!) invert state - false is true and true is false
            var ww = 100;
            var vv = 200;
            document.write((!ww<101)&&(!vv>100)) // both true therefore answer is false
            //NOT operator reverses the boolean value
             </script>

        <h3><em>String Operators</em></h3>
        <script>
            /*Concatention operator represented by (+) is used to build strings made up of smaller strings
            or to join strings with other data types (i.e numbers)*/
            var pre = "I am loved "; //separate string
            var post = "by my mother and siblings. "; //separate string
            document.write(pre + post);

            /*numbers in quotes i.e "30" are treated as strings and not number 42. 
            but as two separate digits. EXAMPLE BELOW...*/ 
            var bre = "I woke up at ";
            var bro = "3 am.";
            document.write(bre+bro)
        </script>
        <h3><em>Conditional (Ternany) Operator</em></h3>
        <script>
            //this operator assigns a value to a variable based on a condition
            var age = 30;
            var isAdult = (age>18) ? "Old enough" : "Young"; /*this is the condition
            if the age is > than 18 then the value returned is "Old Enough"
            but if the age is not, then the latter is returned*/
            document.write(isAdult) //condition met ---therefore former is returned

            /*NB:
            #Condition met = former value returned
            #Conditon not met = latter value returned
            #Remember the (?) after the condition before the possible answers that can be returned*/
            
        </script>
     </body>
</html>